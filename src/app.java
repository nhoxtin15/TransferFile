
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.security.DigestInputStream;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author nhoxtin15
 */


public class app extends javax.swing.JFrame {

    /**
     * Creates new form app
     */
    public app() {
        startingDir ="";
        initComponents();
    }
    
    private String startingDir;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jListListFile = new javax.swing.JList<>();
        ButtonChooseFile = new javax.swing.JButton();
        textFieldDirectoryStoring = new javax.swing.JTextField();
        ButtonStoringDirectory = new javax.swing.JButton();
        TransferButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jListListFile.setToolTipText("");
        jScrollPane2.setViewportView(jListListFile);

        ButtonChooseFile.setText("Choose File");
        ButtonChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonChooseFileActionPerformed(evt);
            }
        });

        labelTransfering.setFont(new java.awt.Font("PT Serif", 1, 20)); // NOI18N
        labelTransfering.setText("Trasfering files");

        labelMain.setFont(new java.awt.Font("PT Serif", 1, 36)); // NOI18N
        labelMain.setText("Transfer File Application");
        labelMain.setToolTipText("");

        textFieldDirectoryStoring.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldDirectoryStoringActionPerformed(evt);
            }
        });

        labelStoring.setFont(new java.awt.Font("PT Serif", 1, 20)); // NOI18N
        labelStoring.setText("Storing directory");

        ButtonStoringDirectory.setText("Choose Directory");
        ButtonStoringDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonStoringDirectoryActionPerformed(evt);
            }
        });

        TransferButton.setFont(new java.awt.Font("Helvetica Neue", 1, 40)); // NOI18N
        TransferButton.setText("Transfer");
        TransferButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransferButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(labelMain))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(labelTransfering)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ButtonChooseFile))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(textFieldDirectoryStoring, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(labelStoring)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ButtonStoringDirectory))
                            .addComponent(TransferButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(labelMain)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonChooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTransfering, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelStoring)
                            .addComponent(ButtonStoringDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textFieldDirectoryStoring, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(186, 186, 186)
                        .addComponent(TransferButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void ReadFile(File directory, String currentPath, ArrayList<String> storingList){
        File[] listFileCurrentDirectory = directory.listFiles();
        if(listFileCurrentDirectory!=null){
            for (File file : listFileCurrentDirectory){
                if(file.isDirectory()){
                    ReadFile(file,currentPath+"/"+file.getName(),storingList);
                }
                else{
                    storingList.add(currentPath+"/"+file.getName());
                }
            }
        }
        
    }
    
    private void ButtonChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonChooseFileActionPerformed
        
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);      
        
        // Show the file chooser dialog
        int result = fileChooser.showOpenDialog(null);
           
        // Check if a file was selected
        if(result != JFileChooser.APPROVE_OPTION){
            return;
        }
        this.startingDir = fileChooser.getSelectedFile().getAbsolutePath();
        ArrayList<String> listFile = new ArrayList<>();
        File StartingDirectory = new File(fileChooser.getSelectedFile().getAbsolutePath());
        String path = fileChooser.getSelectedFile().getName();
        System.out.println(path);
        ReadFile(StartingDirectory,path,listFile);
        
        this.jListListFile.setListData(listFile.toArray(new String[listFile.size()]));
        
    }//GEN-LAST:event_ButtonChooseFileActionPerformed
    
    private void ButtonStoringDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonStoringDirectoryActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        // Show the file chooser dialog
        int result = fileChooser.showOpenDialog(null);

        // Check if a file was selected
        if (result == JFileChooser.APPROVE_OPTION) {
            // Get the selected file
            java.io.File selectedFile = fileChooser.getSelectedFile();
            this.textFieldDirectoryStoring.setText( selectedFile.getAbsolutePath());
            
            
        }
    }//GEN-LAST:event_ButtonStoringDirectoryActionPerformed
    
    
    
    
    private void CheckDirectory(String startingPath, String desiredPath){
        String[] List_path = desiredPath.split("/");
        for (int i = 1; i< List_path.length-1;i++){
            startingPath = startingPath+"/"+List_path[i] ;
            Path path = Paths.get(startingPath);
            
            try{
                Files.createDirectory(path);
            }
            catch (java.nio.file.FileAlreadyExistsException e){
                
            }
            catch (IOException e){
                //if the directory already exsit (it will throw the exception)
                
                System.out.println(e);
                
                
            }
            
            
        }
    }
    private static String calculateMD5Checksum(Path filePath) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            try (InputStream is = Files.newInputStream(filePath);
                 DigestInputStream dis = new DigestInputStream(is, md)) {
                while (dis.read() != -1) ;
            }
            byte[] digest = md.digest();
            StringBuilder result = new StringBuilder();
            for (byte b : digest) {
                result.append(String.format("%02x", b));
            }
            return result.toString();
        } catch (NoSuchAlgorithmException | IOException e) {
            e.printStackTrace();
            return null;
        }
    }
    private void TransferButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransferButtonActionPerformed
        // TODO add your handling code here:
        List<String> selectedItems = this.jListListFile.getSelectedValuesList();
        for (String selectedFile : selectedItems){
            CheckDirectory(this.textFieldDirectoryStoring.getText(),selectedFile);
            //parse the string
            StringBuilder temp = new StringBuilder();
            String[] temparray = selectedFile.split("/");
            
            
            for (int i = 1; i < temparray.length; i++){
                temp.append(temparray[i]+"/");
            }
            
            String StringSourcePath = this.startingDir+"/"+temp.toString();
            String StringDestinationPath = this.textFieldDirectoryStoring.getText() + "/"+temp.toString();
            Path sourcePath = Paths.get(StringSourcePath);
            Path destinationPath = Paths.get(StringDestinationPath);
             try {
                // Copy the file
                String sourceChecksum = calculateMD5Checksum(sourcePath);
                Files.copy(sourcePath, destinationPath, StandardCopyOption.REPLACE_EXISTING);
                String destinationChecksum = calculateMD5Checksum(destinationPath);
                if (sourceChecksum.equals(destinationChecksum)) {
                    System.out.println("Checksums match. File copy successful:" + StringSourcePath);
                } else {
                    System.out.println("Checksums do not match. File copy failed.");
                }
                
            } catch (IOException e) {
                System.err.println("Failed to copy the file: " + e.getMessage());
            }
            
        }
        
    }//GEN-LAST:event_TransferButtonActionPerformed

    private void textFieldDirectoryStoringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldDirectoryStoringActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldDirectoryStoringActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(app.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(app.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(app.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(app.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new app().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonChooseFile;
    private javax.swing.JButton ButtonStoringDirectory;
    private javax.swing.JButton TransferButton;
    private javax.swing.JList<String> jListListFile;
    private javax.swing.JScrollPane jScrollPane2;
    private final javax.swing.JLabel labelMain = new javax.swing.JLabel();
    private final javax.swing.JLabel labelStoring = new javax.swing.JLabel();
    private final javax.swing.JLabel labelTransfering = new javax.swing.JLabel();
    private javax.swing.JTextField textFieldDirectoryStoring;
    // End of variables declaration//GEN-END:variables
}
